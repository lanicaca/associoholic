// Top-level build file where you can add configuration options common to all sub-projects/modules.
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

apply plugin: 'com.diffplug.gradle.spotless'

buildscript {
    ext {
        // Sdk and tools
        compileSdkVersion = 28
        minSdkVersion = 21
        targetSdkVersion = 28

        // App dependencies
        gradleVersion = '3.5.3'
        kotlinVersion = '1.3.41'
        lifecycleVersion = '2.2.0-alpha01'
        navigationVersion = '2.1.0-alpha05'
        okHttpVersion = '3.14.2'
        glideVersion = '4.9.0'
        gsonVersion = '2.8.5'
        epoxyVersion = '3.7.0'
    }
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.27.1"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
    }
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
    tasks.withType(KotlinCompile) {
        kotlinOptions {
            freeCompilerArgs = [
                    "-Xjsr305=strict"
            ]
        }
    }
}

spotless {
    kotlinGradle {
        // This path needs to be relative to each project
        target fileTree(dir: "src", include: "**/*.kt")
        // see https://github.com/shyiko/ktlint#standard-rules
        trimTrailingWhitespace()
        indentWithTabs()
        endWithNewline()
        ktlint().userData("disabled_rules" : "no-wildcard-imports")
    }
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

tasks.getByPath(':app:preBuild').dependsOn installGitHook


